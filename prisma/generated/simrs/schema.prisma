generator client {
  provider      = "prisma-client-js"
  output        = "../generated/simrs"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("SIMRS_DATABASE_URL")
}

model PaymentMethod {
  id          Int     @id
  isEnabled   Boolean @map("statusenabled")
  displayName String  @map("reportdisplay")

  @@map("kelompokpasien_m")
}

model Bed {
  id          Int     @id
  displayName String  @map("reportdisplay")
  bedNumber   Int     @map("nomorbed")
  isEnabled   Boolean @map("statusenabled")
  roomId      Int?    @map("objectkamarfk")
  bedStatusId Int?    @map("objectstatusbedfk")

  room      Room?      @relation(fields: [roomId], references: [id])
  bedStatus BedStatus? @relation(fields: [bedStatusId], references: [id])

  @@map("tempattidur_m")
}

model Room {
  id        Int     @id
  roomName  String  @map("namakamar")
  isEnabled Boolean @map("statusenabled")
  unitId    Int?    @map("objectruanganfk")
  classId   Int?    @map("objectkelasfk")

  unit  Unit?  @relation(fields: [unitId], references: [id])
  class Class? @relation(fields: [classId], references: [id])
  beds  Bed[]

  @@map("kamar_m")
}

model Unit {
  id           Int     @id
  unitName     String  @map("namaruangan")
  isEnabled    Boolean @map("statusenabled")
  departmentId Int?    @map("objectdepartemenfk")

  rooms           Room[]
  department      Department?      @relation(fields: [departmentId], references: [id])
  stockDetails    StockDetail[]
  doctorSchedules DoctorSchedule[]

  @@map("ruangan_m")
}

model BedStatus {
  id        Int     @id
  status    String  @map("statusbed")
  isEnabled Boolean @map("statusenabled")

  beds Bed[]

  @@map("statusbed_m")
}

model Class {
  id        Int     @id
  className String  @map("namakelas")
  isEnabled Boolean @map("statusenabled")

  rooms Room[]

  @@map("kelas_m")
}

model Department {
  id             Int     @id
  departmentName String  @map("namadepartemen")
  isEnabled      Boolean @map("statusenabled")

  units Unit[]

  @@map("departemen_m")
}

model Product {
  id          Int     @id
  productName String  @map("namaproduk")
  isEnabled   Boolean @default(true) @map("statusenabled")

  stockDetails StockDetail[]

  @@map("produk_m")
}

model ServiceReceipt {
  id        String   @id @map("norec")
  receiptAt DateTime @map("tglstruk")

  stockDetails StockDetail[]

  @@map("strukpelayanan_t")
}

model StockDetail {
  id              String    @id @map("norec")
  productId       Int       @map("objectprodukfk")
  unitId          Int       @map("objectruanganfk")
  receiptId       String    @map("nostrukterimafk")
  sourceProductId Int?      @map("objectasalprodukfk")
  netPrice        Float?    @map("harganetto2")
  discountPrice   Float?    @map("hargadiscount")
  quantity        Float     @map("qtyproduk")
  isEnabled       Boolean   @map("statusenabled")
  expiredAt       DateTime? @map("tglkadaluarsa")

  product Product        @relation(fields: [productId], references: [id])
  unit    Unit           @relation(fields: [unitId], references: [id])
  receipt ServiceReceipt @relation(fields: [receiptId], references: [id])

  @@map("stokprodukdetail_t")
}

model DoctorSchedule {
  id        Int      @id
  unitId    Int      @map("objectruanganfk")
  doctorId  Int      @map("objectpegawaifk")
  startTime DateTime @map("jammulai")
  endTime   DateTime @map("jamakhir")
  note      String?  @map("keterangan")
  days      String   @map("hari")
  isEnabled Boolean  @map("statusenabled")

  unit   Unit     @relation(fields: [unitId], references: [id])
  doctor Employee @relation(fields: [doctorId], references: [id])

  @@map("jadwaldokter_m")
}

model Employee {
  id         Int     @id
  fullName   String  @map("namalengkap")
  identityNo String? @map("noidentitas")
  isEnabled  Boolean @map("statusenabled")

  doctorSchedules DoctorSchedule[]

  @@map("pegawai_m")
}
